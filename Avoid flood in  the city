class Solution:
    def avoidFlood(self, rains: List[int]) -> List[int]:
        n=len(rains)
        full={}
        dry_days=[]
        res=[-1]*n
        for i,lake in enumerate(rains):
            if lake==0:
                dry_days.append(i)
                res[i]=1
            else:
                if lake in full:
                    j=bisect_right(dry_days,full[lake])
                    if j==len(dry_days):
                        return []
                    dry_day=dry_days.pop(j)
                    res[dry_day]=lake
                full[lake]=i
                res[i]=-1
        return res

        
